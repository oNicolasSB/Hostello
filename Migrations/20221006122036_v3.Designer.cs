// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hostello.Data;

#nullable disable

namespace hostello.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221006122036_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("hostello.Models.Acomodacao", b =>
                {
                    b.Property<int>("IdAcomodacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("EstadiaMax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadiaMin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FkAdministrador")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkEstabelecimento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkTipoAcomodacao")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MediaAvaliacaoQuarto")
                        .HasColumnType("REAL");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PessoasMax")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorDiaria")
                        .HasColumnType("REAL");

                    b.HasKey("IdAcomodacao");

                    b.HasIndex("FkAdministrador");

                    b.HasIndex("FkEstabelecimento");

                    b.HasIndex("FkTipoAcomodacao");

                    b.ToTable("Acomodacoes");
                });

            modelBuilder.Entity("hostello.Models.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Aprovado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("FkAcomodacao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FkAdministrador")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkCliente")
                        .HasColumnType("INTEGER");

                    b.Property<double>("NotaAvaliacao")
                        .HasColumnType("REAL");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("FkAcomodacao");

                    b.HasIndex("FkAdministrador");

                    b.HasIndex("FkCliente");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("hostello.Models.Contato", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("FkEstabelecimento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasKey("IdContato");

                    b.HasIndex("FkEstabelecimento");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("hostello.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("IdEndereco");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("hostello.Models.Estabelecimento", b =>
                {
                    b.Property<int>("IdEstabelecimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<int>("FkEndereco")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MediaAvaliacao")
                        .HasColumnType("REAL");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResponsavelIdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelefoneFixo")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasKey("IdEstabelecimento");

                    b.HasIndex("FkEndereco");

                    b.HasIndex("ResponsavelIdUsuario");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("hostello.Models.ItemReserva", b =>
                {
                    b.Property<int>("IdItemReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkAcomodacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkReserva")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("IdItemReserva");

                    b.HasIndex("FkAcomodacao");

                    b.HasIndex("FkReserva");

                    b.ToTable("ItensReserva");
                });

            modelBuilder.Entity("hostello.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstadiaEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstadiaSaida")
                        .HasColumnType("TEXT");

                    b.Property<int>("FkCliente")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorReserva")
                        .HasColumnType("REAL");

                    b.HasKey("IdReserva");

                    b.HasIndex("FkCliente");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("hostello.Models.TipoAcomodacao", b =>
                {
                    b.Property<int>("IdTipoAcomodacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeTipoAcomodacao")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("IdTipoAcomodacao");

                    b.ToTable("TiposAcomodacoes");
                });

            modelBuilder.Entity("hostello.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("hostello.Models.Administrador", b =>
                {
                    b.HasBaseType("hostello.Models.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("hostello.Models.Cliente", b =>
                {
                    b.HasBaseType("hostello.Models.Usuario");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("hostello.Models.Responsavel", b =>
                {
                    b.HasBaseType("hostello.Models.Usuario");

                    b.HasDiscriminator().HasValue("Responsavel");
                });

            modelBuilder.Entity("hostello.Models.Acomodacao", b =>
                {
                    b.HasOne("hostello.Models.Administrador", "Administrador")
                        .WithMany("Acomodacoes")
                        .HasForeignKey("FkAdministrador");

                    b.HasOne("hostello.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("Acomodacoes")
                        .HasForeignKey("FkEstabelecimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.TipoAcomodacao", "TipoAcomodacao")
                        .WithMany("Acomodacoes")
                        .HasForeignKey("FkTipoAcomodacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Estabelecimento");

                    b.Navigation("TipoAcomodacao");
                });

            modelBuilder.Entity("hostello.Models.Avaliacao", b =>
                {
                    b.HasOne("hostello.Models.Acomodacao", "Acomodacao")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FkAcomodacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.Administrador", "Administrador")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FkAdministrador");

                    b.HasOne("hostello.Models.Cliente", "Cliente")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FkCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acomodacao");

                    b.Navigation("Administrador");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("hostello.Models.Contato", b =>
                {
                    b.HasOne("hostello.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("Contatos")
                        .HasForeignKey("FkEstabelecimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("hostello.Models.Estabelecimento", b =>
                {
                    b.HasOne("hostello.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("FkEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.Responsavel", null)
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("ResponsavelIdUsuario");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("hostello.Models.ItemReserva", b =>
                {
                    b.HasOne("hostello.Models.Acomodacao", "Acomodacao")
                        .WithMany("ItensReserva")
                        .HasForeignKey("FkAcomodacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.Reserva", "Reserva")
                        .WithMany("ItensReserva")
                        .HasForeignKey("FkReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acomodacao");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("hostello.Models.Reserva", b =>
                {
                    b.HasOne("hostello.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("FkCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("hostello.Models.Acomodacao", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("ItensReserva");
                });

            modelBuilder.Entity("hostello.Models.Estabelecimento", b =>
                {
                    b.Navigation("Acomodacoes");

                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("hostello.Models.Reserva", b =>
                {
                    b.Navigation("ItensReserva");
                });

            modelBuilder.Entity("hostello.Models.TipoAcomodacao", b =>
                {
                    b.Navigation("Acomodacoes");
                });

            modelBuilder.Entity("hostello.Models.Administrador", b =>
                {
                    b.Navigation("Acomodacoes");

                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("hostello.Models.Cliente", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("hostello.Models.Responsavel", b =>
                {
                    b.Navigation("Estabelecimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
