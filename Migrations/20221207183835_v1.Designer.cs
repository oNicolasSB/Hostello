// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hostello.Data;

#nullable disable

namespace hostello.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221207183835_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("hostello.Models.Acomodacao", b =>
                {
                    b.Property<int>("IdAcomodacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("EstadiaMax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadiaMin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FkAdministrador")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkResponsavel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkTipoAcomodacao")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MediaAvaliacaoQuarto")
                        .HasColumnType("REAL");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PessoasMax")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorDiaria")
                        .HasColumnType("REAL");

                    b.HasKey("IdAcomodacao");

                    b.HasIndex("FkAdministrador");

                    b.HasIndex("FkResponsavel");

                    b.HasIndex("FkTipoAcomodacao");

                    b.ToTable("Acomodacoes");
                });

            modelBuilder.Entity("hostello.Models.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Aprovado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAvaliacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("FkAcomodacao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FkAdministrador")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkCliente")
                        .HasColumnType("INTEGER");

                    b.Property<double>("NotaAvaliacao")
                        .HasColumnType("REAL");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("FkAcomodacao");

                    b.HasIndex("FkAdministrador");

                    b.HasIndex("FkCliente");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("hostello.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Nome = "Suíte"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Nome = "Internet"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Nome = "Estacionamento"
                        },
                        new
                        {
                            IdCategoria = 4,
                            Nome = "ArCondicionado"
                        },
                        new
                        {
                            IdCategoria = 5,
                            Nome = "Elevador"
                        },
                        new
                        {
                            IdCategoria = 6,
                            Nome = "TV"
                        },
                        new
                        {
                            IdCategoria = 7,
                            Nome = "Frigobar"
                        },
                        new
                        {
                            IdCategoria = 8,
                            Nome = "BeiraMar"
                        });
                });

            modelBuilder.Entity("hostello.Models.Contato", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("FkResponsavel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResponsavelIdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasKey("IdContato");

                    b.HasIndex("ResponsavelIdUsuario");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("hostello.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("IdEndereco");

                    b.ToTable("Enderecos");

                    b.HasData(
                        new
                        {
                            IdEndereco = 1,
                            Bairro = "Bairro dos bobos",
                            Cep = "29360-000",
                            Cidade = "Castelo",
                            Complemento = "apt 404",
                            Estado = "Espirito Santo",
                            Logradouro = "Rua dos bobos",
                            Numero = "0",
                            Pais = "Brasil"
                        });
                });

            modelBuilder.Entity("hostello.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaPago")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EstadiaEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstadiaSaida")
                        .HasColumnType("TEXT");

                    b.Property<int>("FkAcomodacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FkCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PeriodoEstadia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtdePessoas")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorReserva")
                        .HasColumnType("REAL");

                    b.HasKey("IdReserva");

                    b.HasIndex("FkAcomodacao");

                    b.HasIndex("FkCliente");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("hostello.Models.TipoAcomodacao", b =>
                {
                    b.Property<int>("IdTipoAcomodacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeTipoAcomodacao")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("IdTipoAcomodacao");

                    b.ToTable("TiposAcomodacoes");

                    b.HasData(
                        new
                        {
                            IdTipoAcomodacao = 1,
                            NomeTipoAcomodacao = "Quarto"
                        },
                        new
                        {
                            IdTipoAcomodacao = 2,
                            NomeTipoAcomodacao = "Pousada"
                        });
                });

            modelBuilder.Entity("hostello.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("hostello.Models.Administrador", b =>
                {
                    b.HasBaseType("hostello.Models.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Cpf = "111.111.111-11",
                            DataNascimento = new DateTime(2003, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nicolasbassini@hotmail.com",
                            Nome = "Nicolas",
                            Senha = "$2a$10$R1wO91Bzdj.7Xz74dZhFcucaFarD0ADszqBu6HIrueZ/O1wOgMDWm",
                            Sexo = 1,
                            Telefone = "+5528999752520"
                        });
                });

            modelBuilder.Entity("hostello.Models.Cliente", b =>
                {
                    b.HasBaseType("hostello.Models.Usuario");

                    b.Property<int?>("FkEndereco")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Cliente_FkEndereco");

                    b.HasIndex("FkEndereco");

                    b.HasDiscriminator().HasValue("Cliente");

                    b.HasData(
                        new
                        {
                            IdUsuario = 3,
                            Cpf = "333.333.333-33",
                            DataNascimento = new DateTime(2004, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anna@email.com",
                            Nome = "Anna",
                            Senha = "$2a$10$drRKLSDft7ypuwkTDJkcXeSnOi6HTtfECJqrcxIOvXO20LMM5b30C",
                            Sexo = 2,
                            Telefone = "+5528999967759"
                        });
                });

            modelBuilder.Entity("hostello.Models.Responsavel", b =>
                {
                    b.HasBaseType("hostello.Models.Usuario");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FkEndereco")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MediaAvaliacao")
                        .HasColumnType("REAL");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.HasIndex("FkEndereco");

                    b.HasDiscriminator().HasValue("Responsavel");

                    b.HasData(
                        new
                        {
                            IdUsuario = 2,
                            Cpf = "222.222.222-22",
                            DataNascimento = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dono@empresa.com",
                            Nome = "Dono Empresa",
                            Senha = "$2a$10$5T.WEOHhFeCs3vBQaUsC1OaU/k1r54fPGntGneNgPCyNHK36qJCzi",
                            Sexo = 2,
                            Telefone = "+5528999999999",
                            CNPJ = "12312312312312",
                            Celular = "+5528999999998",
                            FkEndereco = 1,
                            NomeFantasia = "Empresa Fantasia",
                            RazaoSocial = "Empresa Corporation"
                        });
                });

            modelBuilder.Entity("hostello.Models.Acomodacao", b =>
                {
                    b.HasOne("hostello.Models.Administrador", "Administrador")
                        .WithMany("Acomodacoes")
                        .HasForeignKey("FkAdministrador");

                    b.HasOne("hostello.Models.Responsavel", "Responsavel")
                        .WithMany("Acomodacoes")
                        .HasForeignKey("FkResponsavel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.TipoAcomodacao", "TipoAcomodacao")
                        .WithMany("Acomodacoes")
                        .HasForeignKey("FkTipoAcomodacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Responsavel");

                    b.Navigation("TipoAcomodacao");
                });

            modelBuilder.Entity("hostello.Models.Avaliacao", b =>
                {
                    b.HasOne("hostello.Models.Acomodacao", "Acomodacao")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FkAcomodacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.Administrador", "Administrador")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FkAdministrador");

                    b.HasOne("hostello.Models.Cliente", "Cliente")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FkCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acomodacao");

                    b.Navigation("Administrador");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("hostello.Models.Contato", b =>
                {
                    b.HasOne("hostello.Models.Responsavel", "Responsavel")
                        .WithMany("Contatos")
                        .HasForeignKey("ResponsavelIdUsuario");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("hostello.Models.Reserva", b =>
                {
                    b.HasOne("hostello.Models.Acomodacao", "Acomodacao")
                        .WithMany("Reservas")
                        .HasForeignKey("FkAcomodacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hostello.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("FkCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acomodacao");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("hostello.Models.Cliente", b =>
                {
                    b.HasOne("hostello.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("FkEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("hostello.Models.Responsavel", b =>
                {
                    b.HasOne("hostello.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("FkEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("hostello.Models.Acomodacao", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("hostello.Models.TipoAcomodacao", b =>
                {
                    b.Navigation("Acomodacoes");
                });

            modelBuilder.Entity("hostello.Models.Administrador", b =>
                {
                    b.Navigation("Acomodacoes");

                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("hostello.Models.Cliente", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("hostello.Models.Responsavel", b =>
                {
                    b.Navigation("Acomodacoes");

                    b.Navigation("Contatos");
                });
#pragma warning restore 612, 618
        }
    }
}
